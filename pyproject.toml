# SPDX - FileCopyrightText : 2024 Flashinfer team.
# SPDX - FileCopyrightText : 2025 Advanced Micro Devices, Inc.
#
# SPDX - License - Identifier : Apache 2.0

[project]
name = "flashinfer"
dynamic = ["version"]
description = "Fast Attention Algorithms for LLM Inference"
requires-python = ">=3.9"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "FlashInfer Team"}
]
dependencies = [
    "torch>=2.4",
    "numpy",
]

[project.optional-dependencies]
dev = [
    "pytest",
]

[build-system]
requires = [
    "scikit-build-core>=0.4.3",
    "setuptools_scm>=8.0.0",
    "torch >= 2.4",
    "numpy",
]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
build.verbose = true
logging.level = "INFO"
build-dir = "_skbuild"
experimental = true
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
wheel.py-api = "cp39"

[tool.scikit-build.sdist]
cmake = false
exclude = [
    ".clang-format",
    ".devcontainer",
    ".github",
    ".gitignore",
    ".gitmodules",
    ".pre-commit-config.yaml",
    "examples",
    "profiler",
    "benchmarks",
    "docker",
    "scripts",
    "tests",
    "docs",
    "3rdparty/mscclpp/**/*",
    "3rdparty/googletest/**/*",
    "3rdparty/nvbench/**/*",
    "3rdparty/spdlog/**/*",
    "3rdparty/composable_kernels/**/*",
    "3rdparty/cutlass/**/*",
    "ci",
    "aot_build_utils",
    "Jenkinsfile",
    "format.sh",
    "custom_backend.py",
    "version.txt",
    "CHANGELOG.md",
]
include = [
    "3rdparty/cutlass/include/**/*",
    "3rdparty/cutlass/tools/**/*",
    "flashinfer/_version.py"
]

# Base CMake definitions - applied to all builds
[tool.scikit-build.cmake.define]
FLASHINFER_CUTLASS_DIR = {env="FLASHINFER_CUTLASS_DIR", default="3rdparty/cutlass"}
FLASHINFER_CUDA_ARCHITECTURES = "80"
TORCH_CUDA_ARCH_LIST = "8.0"
FLASHINFER_BUILD_WHEELS="ON"
FLASHINFER_AOT_TORCH_EXTS_CUDA = {env="FLASHINFER_AOT_TORCH_EXTS_CUDA", default="OFF"}
FLASHINFER_ENABLE_F16="ON"
FLASHINFER_ENABLE_BF16="ON"
FLASHINFER_ENABLE_FP8="ON"
FLASHINFER_ENABLE_FP8_E4M3="ON"
FLASHINFER_ENABLE_FP8_E5M2="ON"

[tool.setuptools_scm]
write_to = "flashinfer/_version.py"
version_scheme = "post-release"
local_scheme = "no-local-version"
fallback_version = "0.0.0"

[tool.codespell]
ignore-words-list = "3nd"
skip = [
    "build",
    "3rdparty",
    "dist",
    ".venv"
]

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 80
multi_line_output = 3
skip = ["flashinfer/_version.py"]
use_parentheses = true


[tool.mypy]
ignore_missing_imports = false
show_column_numbers = true
show_error_context = true
follow_imports = "skip"
ignore_errors = false
strict_optional = false


[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    # "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    # "I",
]
ignore = [
    # Module level import not at top of file
    "E402",
    # star imports
    "F405", "F403",
    # ambiguous name
    "E741",
    # line too long
    "E501",
    # key in dict.keys()
    "SIM118",
    # memory leaks
    "B019",
    # No such file or directory
    "E902",
    # nested `if` statements
    "SIM102",
    # `if`-`else`-block
    "SIM108",
    # assign `lambda` expressions
    "E731",
    # Loop control variable overrides iterable it iterates
    "B020",
    # Return te negated condition directly
    "SIM103",
]
